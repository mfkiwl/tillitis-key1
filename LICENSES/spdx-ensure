#!/bin/bash
set -eu

# Check for the SPDX tag in all files in the repo. Exit with a non-zero code if
# some is missing. The missingok arrays below contain files and directories
# with files where the the tag is not required.

cd "${0%/*}"
cd ..

tag="SPDX-License-Identifier:"

missingok_dirs=(
.github/workflows/
LICENSES/
doc/
hw/application_fpga/core/picorv32/
hw/application_fpga/core/uart/
)

missingok_files=(
.editorconfig
.gitattributes
.gitignore
.clang-format
README.md
contrib/99-tillitis.rules
contrib/Dockerfile
contrib/Makefile
contrib/verible.sha512

hw/application_fpga/README.md
hw/application_fpga/core/clk_reset_gen/README.md
hw/application_fpga/core/fw_ram/README.md
hw/application_fpga/core/ram/README.md
hw/application_fpga/core/rom/README.md
hw/application_fpga/core/tk1/tb/udi.hex
hw/application_fpga/core/uds/README.md
hw/application_fpga/fw/README.md
hw/application_fpga/fw/tk1/picorv32/README.md
hw/application_fpga/apps/Makefile
hw/application_fpga/apps/README.md
hw/application_fpga/application_fpga.bin.sha256
hw/application_fpga/config.vlt
hw/application_fpga/core/timer/README.md
hw/application_fpga/core/tk1/README.md
hw/application_fpga/core/touch_sense/README.md
hw/application_fpga/core/trng/README.md
hw/application_fpga/data/udi.hex
hw/application_fpga/data/uds.hex
hw/application_fpga/firmware.bin.sha512
hw/application_fpga/fw/testfw/Makefile
hw/application_fpga/fw/tk1/Makefile
hw/application_fpga/tools/tpt/README.md
hw/usb_interface/ch552_fw/.gitignore
hw/usb_interface/ch552_fw/LICENSES/GPL-2.0-only.txt
hw/usb_interface/ch552_fw/LICENSES/MIT.txt
hw/usb_interface/ch552_fw/Makefile
hw/usb_interface/ch552_fw/README.md

# tkey-libs is assumed to be REUSE compliant
hw/application_fpga/tkey-libs/LICENSE
hw/application_fpga/tkey-libs/LICENSES/BSD-2-Clause.txt
hw/application_fpga/tkey-libs/LICENSES/CC0-1.0.txt
hw/application_fpga/tkey-libs/Makefile
hw/application_fpga/tkey-libs/README-DIST.txt
hw/application_fpga/tkey-libs/README.md
hw/application_fpga/tkey-libs/RELEASE.md
hw/application_fpga/tkey-libs/blake2s/LICENSE
hw/application_fpga/tkey-libs/blake2s/Makefile
hw/application_fpga/tkey-libs/blake2s/blake2s.c
hw/application_fpga/tkey-libs/blake2s/blake2s.h
hw/application_fpga/tkey-libs/blake2s/blake2s_test.c
hw/application_fpga/tkey-libs/example-app/Makefile
hw/application_fpga/tkey-libs/monocypher/LICENSE
hw/application_fpga/tkey-libs/monocypher/README.md

hw/application_fpga/tools/README.md
hw/application_fpga/tools/b2s/README.md
hw/application_fpga/tools/b2s/go.mod
hw/application_fpga/tools/b2s/go.sum
hw/application_fpga/tools/tkeyimage/README.md
hw/application_fpga/tools/tkeyimage/go.mod
hw/application_fpga/tools/tkeyimage/go.sum
)

is_missingok() {
  item="$1"
  # ok for empty files
  [[ -f "$item" ]] && [[ ! -s "$item" ]] && return 0
  for fileok in "${missingok_files[@]}"; do
    [[ "$item" = "$fileok" ]] && return 0
  done
  for dirok in "${missingok_dirs[@]}"; do
    [[ "$item" =~ ^$dirok ]] && return 0
  done
  return 1
}

printf "* Checking for SPDX tags in %s\n" "$PWD"

mapfile -t repofiles < <(git ls-files || true)
if [[ -z "${repofiles[*]}" ]]; then
  printf "* No files in the repo?!\n"
  exit 1
fi

failed=0

printed=0
for fileok in "${missingok_files[@]}"; do
  [[ -f "$fileok" ]] && continue
  if (( !printed )); then
    printf "* Some files in missingok_files are themselves missing:\n"
    printed=1
    failed=1
  fi
  printf "%s\n" "$fileok"
done

printed=0
for dirok in "${missingok_dirs[@]}"; do
  [[ -d "$dirok" ]] && continue
  if (( !printed )); then
    printf "* Some dirs in missingok_dirs are themselves missing:\n"
    printed=1
    failed=1
  fi
  printf "%s\n" "$dirok"
done

printed=0
for file in "${repofiles[@]}"; do
  is_missingok "$file" && continue
  if ! grep -q "$tag" "$file"; then
    if (( !printed )); then
      printf "* Files missing the SPDX tag:\n"
      printed=1
      failed=1
    fi
    printf "%s\n" "$file"
  fi
done

exit "$failed"
